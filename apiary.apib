FORMAT: 1A
HOST: https://cp.pushwoosh.com/json/1.3/

# Pushwoosh
This is Pushwoosh API

## Register Device [/registerDevice]

### Register device [POST]
### Registers device for the application

Example:

>{  
&nbsp;&nbsp;&nbsp;&nbsp;"request" : {  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"application" : "PW_APPLICATION_CODE",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"push_token" : "DEVICE_PUSH_TOKEN",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"language" : "en",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"hwid" : "HARDWARE_DEVICE_ID",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"timezone" : 3600,  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"device_type" : 1  
&nbsp;&nbsp;&nbsp;&nbsp;}  
}

| field         | type      | example                                | description |
|---------------|:----------|:--------------------------------------|-------------|
| application   | string    | `PUSHWOOSH_APP_ID`        | Your Pushwoosh application ID |
| push_token    | string    | `USUALLY_VERY_LONG_ID`    | Push token for the device |
| language      | string    | `en`                      | Language locale of the device |
| hwid          | string    | `ANOTHER_VERY_LONG_ID`    | Unique string to identify the device <sup>*</sup> |
| timezone      | integer   | `3600`                    | Timezone offset in seconds for the device (optional) |
| device_type   | integer   | `1`                       | 1 – iphone, 2 – blackberry, 3 – android, 4 – nokia, 5 – WP7, 7 – mac |

<sup>*</sup><small>Please note that accessing UDID on iOS is deprecated and not allowed, one of the alternative ways now is to use IdentifierForVendor</small>

<br />
Responses:

Example:
>{  
&nbsp;&nbsp;&nbsp;&nbsp;"status_code":200,  
&nbsp;&nbsp;&nbsp;&nbsp;"status_message":"OK",  
&nbsp;&nbsp;&nbsp;&nbsp;"response": null  
}

| HTTP Status code | status_code variable      | Description |
|---------------|:----------|:-------------|
| 200   | 200    | Device successfully registered |
| 200   | 210    | Argument error. See status_message for more info |
| 400   | N/A    | Malformed request string |
| 500   | 500    | Internal error :( |

+ Request (application/json)

        {
            "request" : {
              "application" : "PW_APPLICATION_CODE",
              "push_token" : "DEVICE_PUSH_TOKEN",
              "language" : "en",
              "hwid" : "HARDWARE_DEVICE_ID",
              "timezone" : 3600,
              "device_type" : 1
           }
        }

+ Response 200 (application/json)

        {
           "status_code":200,
           "status_message":"OK"
           "response": null
        }

## Unregister Device [/unregisterDevice]

### Unregister device [POST]
### Remove device from the application

Example:

>{  
&nbsp;&nbsp;&nbsp;&nbsp;"request" : {  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"application" : "PW_APPLICATION_CODE",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"hwid" : "HARDWARE_DEVICE_ID",  
&nbsp;&nbsp;&nbsp;&nbsp;}  
}

| field         | type      | example                                | description |
|---------------|:----------|:--------------------------------------|-------------|
| application   | string    | `PUSHWOOSH_APP_ID`        | Your Pushwoosh application ID |
| hwid          | string    | `ANOTHER_VERY_LONG_ID`    | Hardware device id used in `registerDevice` function call |

<br />
Responses:

Example:
>{  
&nbsp;&nbsp;&nbsp;&nbsp;"status_code":200,  
&nbsp;&nbsp;&nbsp;&nbsp;"status_message":"OK"  
}

| HTTP Status code | status_code variable      | Description |
|---------------|:----------|:-------------|
| 200   | 200    | Device successfully unsubscribed |
| 200   | 210    | Argument error. See status_message for more info |
| 400   | N/A    | Malformed request string |
| 500   | 500    | Internal error :( |

+ Request (application/json)

        {
            "request" : {
              "application" : "PW_APPLICATION_CODE",
              "hwid" : "HARDWARE_DEVICE_ID"
           }
        }

+ Response 200 (application/json)

        {
           "status_code":200,
           "status_message":"OK"
           "response": null
        }

## Set Tags [/setTags]

### Set tags [POST]
### Set tags values for device

Example:

>{  
&nbsp;&nbsp;&nbsp;&nbsp;"request" : {  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"application" : "DEAD0-BEEF0",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"hwid" : "device hardware id",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"tags" : {  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"tag1" : "string value",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"tag2" : 42,  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"tag3" : "string"  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  
&nbsp;&nbsp;&nbsp;&nbsp;}  
}

| field         | type      | example                                | description |
|---------------|:----------|:--------------------------------------|-------------|
| application   | string    | `PUSHWOOSH_APP_ID`        | Your Pushwoosh application ID |
| hwid          | string    | `ANOTHER_VERY_LONG_ID`    | Hardware device id used in `registerDevice` function call |
| tags          | JSON Object    | `{"tagName1" : "tagValue"}`    | Tag names and values in JSON Object format |

<br />
Responses:

Example:
>{  
&nbsp;&nbsp;&nbsp;&nbsp;"status_code" : 200,  
&nbsp;&nbsp;&nbsp;&nbsp;"status_message" : "OK",  
&nbsp;&nbsp;&nbsp;&nbsp;"response" : null  
}

| HTTP Status code | status_code variable      | Description |
|---------------|:----------|:-------------|
| 200   | 200    | Tags set succcessfully |
| 200   | 210    | Argument error. See status_message for more info |
| 400   | N/A    | Malformed request string |
| 500   | 500    | Internal error :( |

+ Request (application/json)

        {
           "request":{
              "application":"DEAD0-BEEF0",
              "hwid": "device hardware id",
              "tags": {
                   "tag1": "string value",
                   "tag2": 42,
                   "tag3": "string"
              } 
           }
        }

+ Response 200 (application/json)

        {
           "status_code":200,
           "status_message":"OK"
           "response": null
        }

## Set Badge [/setBadge]

### Set badge [POST]
### Set current badge value for the device to let auto-incrementing badges work properly.

This function is used internally by iOS SDK. Every time you set (or clear) the badge value it triggers the value update on Pushwoosh side.

Example:

>{  
&nbsp;&nbsp;&nbsp;&nbsp;"request" : {  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"application" : "DEAD0-BEEF0",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"hwid" : "device hardware id",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"badge" : 5  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  
&nbsp;&nbsp;&nbsp;&nbsp;}  
}

| field         | type      | example                                | description |
|---------------|:----------|:--------------------------------------|-------------|
| application   | string    | `PUSHWOOSH_APP_ID`        | Your Pushwoosh application ID |
| hwid          | string    | `ANOTHER_VERY_LONG_ID`    | Hardware device id used in `registerDevice` function call |
| badge         | integer   | `5`    | Current badge on the application to use with auto-incrementing badges |

<br />
Responses:

Example:
>{  
&nbsp;&nbsp;&nbsp;&nbsp;"status_code" : 200,  
&nbsp;&nbsp;&nbsp;&nbsp;"status_message" : "OK",  
&nbsp;&nbsp;&nbsp;&nbsp;"response" : null  
}

| HTTP Status code | status_code variable      | Description |
|---------------|:----------|:-------------|
| 200   | 200    | Badge set succcessfully |
| 200   | 210    | Argument error. See status_message for more info |
| 400   | N/A    | Malformed request string |
| 500   | 500    | Internal error :( |

+ Request (application/json)

        {
           "request":{
              "application":"DEAD0-BEEF0",
              "hwid": "device hardware id",
              "badge": 5
              } 
           }
        }

+ Response 200 (application/json)

        {
           "status_code":200,
           "status_message":"OK"
           "response": null
        }

## Push Stat [/pushStat]

### Push stat [POST]
### Register push open event.

This function is used internally by Pushwoosh SDK.

Example:

>{  
&nbsp;&nbsp;&nbsp;&nbsp;"request" : {  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"application" : "DEAD0-BEEF0",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"hwid" : "device hardware id",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"hash" : "HASH_VALUE_FROM_PUSH"  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  
&nbsp;&nbsp;&nbsp;&nbsp;}  
}

| field         | type      | example                                | description |
|---------------|:----------|:--------------------------------------|-------------|
| application   | string    | `PUSHWOOSH_APP_ID`        | Your Pushwoosh application ID |
| hwid          | string    | `ANOTHER_VERY_LONG_ID`    | Hardware device id used in `registerDevice` function call |
| hash         | string   | `HASH_VALUE_FROM_PUSH`    | Hash tag received in push notification |

<br />
Responses:

Example:
>{  
&nbsp;&nbsp;&nbsp;&nbsp;"status_code":200,  
&nbsp;&nbsp;&nbsp;&nbsp;"status_message":"OK",  
&nbsp;&nbsp;&nbsp;&nbsp;"response":null  
}

| HTTP Status code | status_code variable      | Description |
|---------------|:----------|:-------------|
| 200   | 200    | Hash sent succcessfully |
| 200   | 210    | Argument error. See status_message for more info |
| 400   | N/A    | Malformed request string |
| 500   | 500    | Internal error :( |

+ Request (application/json)

        {
           "request":{
              "application" : "DEAD0-BEEF0",
              "hwid" : "device hardware id",
              "hash" : "p5"
              } 
           }
        }

+ Response 200 (application/json)

        {
           "status_code" : 200,
           "status_message" : "OK"
           "response" : null
        }

## Get Nearest Zone [/getNearestZone]

### Get nearest zone [POST]
### Records device location for geo push notifications.

This function is used internally by Pushwoosh SDK.

Example:

>{  
&nbsp;&nbsp;&nbsp;&nbsp;"request" : {  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"application" : "DEAD0-BEEF0",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"hwid" : "device hardware id",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"lat" : 12.12345  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"lng" : 23.12345  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  
&nbsp;&nbsp;&nbsp;&nbsp;}  
}

| field         | type      | example                                | description |
|---------------|:----------|:--------------------------------------|-------------|
| application   | string    | `PUSHWOOSH_APP_ID`        | Your Pushwoosh application ID |
| hwid          | string    | `ANOTHER_VERY_LONG_ID`    | Hardware device id used in `registerDevice` function call |
| lat         | float   | `12.12345`    | Latitude of the device |
| lng         | float   | `23.12345`    | Longitude of the device |

<br />
Responses:

Example:
>{  
&nbsp;&nbsp;&nbsp;&nbsp;"status_code" : 200,  
&nbsp;&nbsp;&nbsp;&nbsp;"status_message" : "OK"  
&nbsp;&nbsp;&nbsp;&nbsp;"response" : {  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"name" : "zone name",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"lat" : 42,  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"lng" : 42,  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"range" : 100,  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"distance" : 4715784  
&nbsp;&nbsp;&nbsp;&nbsp;}  
}

Returns nearest zone to the position provided in the request:

| Field | Type      | Description |
|---------------|:----------|:-------------|
| name   | string    | Geo-zone name |
| lat   | float    | Latitude of the zone |
| lng   | float    | Longitude of the zone |
| range   | float    | Range in meters |
| distance   | float    | Distance in meters |

Response codes:

| HTTP Status code | status_code variable      | Description |
|---------------|:----------|:-------------|
| 200   | 200    | Hash sent succcessfully |
| 200   | 210    | Argument error. See status_message for more info |
| 400   | N/A    | Malformed request string |
| 500   | 500    | Internal error :( |

+ Request (application/json)

        {
           "request":{
              "application": "DEAD0-BEEF0",
              "hwid": "HWID",
              "lat": 10.12345,
              "lng": 28.12345
           }
        }

+ Response 200 (application/json)

        {
           "status_code":200,
           "status_message":"OK"
           "response": {
              "name":"zone name",
              "lat":42,
              "lng":42,
              "range":100,
              "distance":4715784
           }
        }
        
## Delete Message [/deleteMessage]

### Delete message [POST]
### Deletes the message

Example:

>{  
&nbsp;&nbsp;&nbsp;&nbsp;"request" : {  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"auth" : "api_access_token",  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"message" : "Message code obtained in createMessage"  
&nbsp;&nbsp;&nbsp;&nbsp;}  
}

| field         | type      | example                                | description |
|---------------|:----------|:--------------------------------------|-------------|
| auth      | string    | `PUSHWOOSH_API_ACCESS_TOKEN`          | Your Pushwoosh API Access Token from the Control Panel |
| message   | string    | `MESSAGE_CODE_FROM_CREATE_MESSAGE`    | Message code obtained in createMessage |

<br />
Responses:

Example:
>{  
&nbsp;&nbsp;&nbsp;&nbsp;"status_code":200,  
&nbsp;&nbsp;&nbsp;&nbsp;"status_message":"OK",  
&nbsp;&nbsp;&nbsp;&nbsp;"response":null  
}

| HTTP Status code | status_code variable      | Description |
|---------------|:----------|:-------------|
| 200   | 200    | Message successfully deleted |
| 200   | 210    | Argument error. See status_message for more info |
| 400   | N/A    | Malformed request string |
| 500   | 500    | Internal error :( |

+ Request (application/json)

        {
           "request":{
              "auth":"api_access_token",
              "message": "Message code obtained in createMessage"
           }
        }

+ Response 200 (application/json)

        {
           "status_code" : 200,
           "status_message" : "OK"
           "response" : null
        }
